[{"name":"app.R","content":"#\r\n# This is a Shiny web application. You can run the application by clicking\r\n# the 'Run App' button above.\r\n#\r\n# Find out more about building applications with Shiny here:\r\n#\r\n#    https://shiny.posit.co/\r\n#\r\n\r\nlibrary(shiny)\r\n# Define UI for application that draws a histogram\r\nui <- fluidPage(\r\n\r\n    # Application title\r\n    titlePanel(\"Population dynamics in continuous time\"),\r\n\r\n    # Sidebar with a slider input for number of bins \r\n    sidebarLayout(\r\n        sidebarPanel(\r\n            sliderInput(\"r\",\r\n                        \"Intrinsic growth rate (r):\",\r\n                        min = -0.5,\r\n                        max = 0.5,\r\n                        value = 0.1),\r\n            numericInput(\"N0\",\r\n                        \"Initial population size (N0):\",\r\n                        min = 0,\r\n                        max = 100,\r\n                        value = 5),\r\n            numericInput(\"time\",\r\n                         \"Duration of population growth:\",\r\n                         min = 10,\r\n                         max = 100,\r\n                         value = 20)\r\n            \r\n            \r\n        ),\r\n\r\n        # Show a plot of the generated distribution\r\n        mainPanel(\r\n           plotOutput(\"nPlot\")\r\n        )\r\n    )\r\n)\r\n\r\n# Define server logic required to draw a histogram\r\nserver <- function(input, output) {\r\n\r\n    output$nPlot <- renderPlot({\r\n        # generate bins based on input$bins from ui.R\r\n        # x    <- faithful[, 2]\r\n        # bins <- seq(min(x), max(x), length.out = input$bins + 1)\r\n        plot(input$N0*exp(input$r*1:input$time), type = \"b\",\r\n             xlab = \"time\", ylab = \"population size\")\r\n        # draw the histogram with the specified number of bins\r\n        # hist(x, breaks = bins, col = 'darkgray', border = 'white',\r\n        #      xlab = 'Waiting time to next eruption (in mins)',\r\n        #      main = 'Histogram of waiting times')\r\n    })\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n","type":"text"},{"name":"popdyns/app.R","content":"#\r\n# This is a Shiny web application. You can run the application by clicking\r\n# the 'Run App' button above.\r\n#\r\n# Find out more about building applications with Shiny here:\r\n#\r\n#    https://shiny.posit.co/\r\n#\r\n\r\nlibrary(shiny)\r\n# Define UI for application that draws a histogram\r\nui <- fluidPage(\r\n\r\n    # Application title\r\n    titlePanel(\"Population dynamics in continuous time\"),\r\n\r\n    # Sidebar with a slider input for number of bins \r\n    sidebarLayout(\r\n        sidebarPanel(\r\n            sliderInput(\"r\",\r\n                        \"Intrinsic growth rate (r):\",\r\n                        min = -0.5,\r\n                        max = 0.5,\r\n                        value = 0.1),\r\n            numericInput(\"N0\",\r\n                        \"Initial population size (N0):\",\r\n                        min = 0,\r\n                        max = 100,\r\n                        value = 5),\r\n            numericInput(\"time\",\r\n                         \"Duration of population growth:\",\r\n                         min = 10,\r\n                         max = 100,\r\n                         value = 20)\r\n            \r\n            \r\n        ),\r\n\r\n        # Show a plot of the generated distribution\r\n        mainPanel(\r\n           plotOutput(\"nPlot\")\r\n        )\r\n    )\r\n)\r\n\r\n# Define server logic required to draw a histogram\r\nserver <- function(input, output) {\r\n\r\n    output$nPlot <- renderPlot({\r\n        # generate bins based on input$bins from ui.R\r\n        # x    <- faithful[, 2]\r\n        # bins <- seq(min(x), max(x), length.out = input$bins + 1)\r\n        plot(input$N0*exp(input$r*1:input$time), type = \"b\",\r\n             xlab = \"time\", ylab = \"population size\")\r\n        # draw the histogram with the specified number of bins\r\n        # hist(x, breaks = bins, col = 'darkgray', border = 'white',\r\n        #      xlab = 'Waiting time to next eruption (in mins)',\r\n        #      main = 'Histogram of waiting times')\r\n    })\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n","type":"text"},{"name":"popdyns-logistic/app.R","content":"#\r\n# This is a Shiny web application. You can run the application by clicking\r\n# the 'Run App' button above.\r\n#\r\n# Find out more about building applications with Shiny here:\r\n#\r\n#    https://shiny.posit.co/\r\n#\r\n\r\nlibrary(shiny)\r\nlibrary(bslib)\r\n# Define UI for application that draws a histogram\r\nui <- page_sidebar(\r\n  \r\n  # Application title\r\n  titlePanel(\"Population dynamics in continuous time\"),\r\n  \r\n  # Sidebar with a slider input for number of bins \r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      sliderInput(\"r\",\r\n                  \"Intrinsic growth rate (r):\",\r\n                  min = -0.5,\r\n                  max = 0.5,\r\n                  value = 0.1),\r\n      numericInput(\"N0\",\r\n                   \"Initial population size (N0):\",\r\n                   min = 0,\r\n                   max = 100,\r\n                   value = 5),\r\n      numericInput(\"K\",\r\n                   \"Carrying capacity\",\r\n                   min = 0,\r\n                   max = 1000,\r\n                   value = 200),\r\n      numericInput(\"time\",\r\n                   \"Duration of population growth:\",\r\n                   min = 10,\r\n                   max = 100,\r\n                   value = 20)\r\n      \r\n      \r\n    ),\r\n    \r\n    # Show a plot of the generated distribution\r\n    mainPanel(\r\n      plotOutput(\"nPlot\")\r\n    )\r\n  )\r\n)\r\n\r\n# Define server logic required to draw a histogram\r\nserver <- function(input, output) {\r\n  bs_themer()\r\n  output$nPlot <- renderPlot({\r\n    plot((input$N0*input$K*exp(input$r*1:input$time))/\r\n           ((input$K-input$N0) + input$N0*exp(input$r*1:input$time)), \r\n         type = \"b\",\r\n         xlab = \"time\", ylab = \"population size\")\r\n  })\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n","type":"text"},{"name":"shiny-temp.Rproj","content":"Version: 1.0\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n","type":"text"}]
